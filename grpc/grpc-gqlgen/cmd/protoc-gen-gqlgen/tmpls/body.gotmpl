{{- /*gotype: github.com/vvakame/til/grpc/grpc-gqlgen/cmd/protoc-gen-gqlgen.FileInfo*/ -}}

{{ range $service := .Services }}

var _ {{ $service.Name }}GraphQLInterface = (*{{ goNamePrivate $service.Name }}Handler)(nil)

func New{{ goName $service.Name }}Handler(cli {{ $service.Name }}Client) {{ $service.Name }}GraphQLInterface {
    return &{{ goNamePrivate $service.Name }}Handler{cli}
}

type {{ $service.Name }}GraphQLInterface interface {
    {{- range $method := $service.Methods }}
        {{- if not $method.Skip }}
            {{ goName $method.GraphQLName -}}
                (ctx context.Context {{ if $method.RequestMessage.HasField }} , input {{ $method.RequestMessage.GoName }} {{ end }}) (*{{ $method.ResponseMessage.GoName }}, error)
        {{- end -}}
    {{ end }}
}

type {{ goNamePrivate $service.Name }}Handler struct {
    {{ goNamePrivate $service.Name }} {{ $service.Name }}Client
}

{{- range $method := $service.Methods }}
    {{- if not $method.Skip }}
    func (h *{{ goNamePrivate $service.Name }}Handler)
        {{- goName $method.GraphQLName }} (ctx context.Context {{ if $method.RequestMessage.HasField }} , input {{ $method.RequestMessage.GoName }} {{ end }}) (*{{ $method.ResponseMessage.GoName }}, error) {

        {{ if not $method.RequestMessage.HasField }}
            input := {{ $method.RequestMessage.GoName }}{}
        {{ end }}

        resp, err := h.{{ goNamePrivate $service.Name }}.{{ $method.Name }}(ctx, &input)
        if err != nil {
            // TODO なんらかのエラーハンドラが必要なはず
            return nil, err
        }

        return resp, nil
    }
    {{- end }}
{{ end }}

{{ end }}


{{ range $enum := .EnumInfos }}
func Marshal{{ $enum.GraphQLName }}(v {{ $enum.GoName }}) graphql.Marshaler {
    return graphql.WriterFunc(func(w io.Writer) {
        _, _ = io.WriteString(w, strconv.Quote(v.String()))
    })
}

func Unmarshal{{ $enum.GraphQLName }}(v interface{}) ({{ $enum.GoName }}, error) {
    if tmpStr, ok := v.(string); ok {
        v, ok := {{ $enum.GoName }}_value[tmpStr]
        if !ok {
            return 0, fmt.Errorf("invalid value format: %s", tmpStr)
        }
        return {{ $enum.GoName }}(v), nil
    }
    return 0, fmt.Errorf("unexpected value type: %T", v)
}
{{ end }}
