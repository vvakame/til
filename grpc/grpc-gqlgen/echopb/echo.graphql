


input SayInput {
	clientMutationId: String
	messageBody: String!
}
type SayPayload {
	clientMutationId: String
	messageBody: String!
	received: Timestamp!
}
type Example1 {
	foo: Example1InMessage!
}
type Example1InMessage {
	bar: String!
}
type Example2 {
	hoge: Example2WithMessage!
}
type Example2WithMessage {
	fuga: String!
}
extend type Mutation {
	say(input: SayInput!): SayPayload!
}
extend type Query {
	saySecond(input: SayInput!): SayPayload!
}
