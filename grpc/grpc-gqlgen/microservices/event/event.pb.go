// Code generated by protoc-gen-go. DO NOT EDIT.
// source: microservices/event/event.proto

package event

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Event struct {
	Id                   uint64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Place                string               `protobuf:"bytes,3,opt,name=place,proto3" json:"place,omitempty"`
	OwnerUserId          uint64               `protobuf:"varint,4,opt,name=owner_user_id,json=ownerUserId,proto3" json:"owner_user_id,omitempty"`
	StartAt              *timestamp.Timestamp `protobuf:"bytes,5,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	EndAt                *timestamp.Timestamp `protobuf:"bytes,6,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_31e9caa41a030c64, []int{0}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Event) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Event) GetPlace() string {
	if m != nil {
		return m.Place
	}
	return ""
}

func (m *Event) GetOwnerUserId() uint64 {
	if m != nil {
		return m.OwnerUserId
	}
	return 0
}

func (m *Event) GetStartAt() *timestamp.Timestamp {
	if m != nil {
		return m.StartAt
	}
	return nil
}

func (m *Event) GetEndAt() *timestamp.Timestamp {
	if m != nil {
		return m.EndAt
	}
	return nil
}

func (m *Event) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Event) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type CreateRequest struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Place                string               `protobuf:"bytes,2,opt,name=place,proto3" json:"place,omitempty"`
	StartAt              *timestamp.Timestamp `protobuf:"bytes,3,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	EndAt                *timestamp.Timestamp `protobuf:"bytes,4,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_31e9caa41a030c64, []int{1}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateRequest) GetPlace() string {
	if m != nil {
		return m.Place
	}
	return ""
}

func (m *CreateRequest) GetStartAt() *timestamp.Timestamp {
	if m != nil {
		return m.StartAt
	}
	return nil
}

func (m *CreateRequest) GetEndAt() *timestamp.Timestamp {
	if m != nil {
		return m.EndAt
	}
	return nil
}

type UpdateRequest struct {
	Id                   uint64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Place                string               `protobuf:"bytes,3,opt,name=place,proto3" json:"place,omitempty"`
	StartAt              *timestamp.Timestamp `protobuf:"bytes,4,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	EndAt                *timestamp.Timestamp `protobuf:"bytes,5,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_31e9caa41a030c64, []int{2}
}

func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(m, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateRequest) GetPlace() string {
	if m != nil {
		return m.Place
	}
	return ""
}

func (m *UpdateRequest) GetStartAt() *timestamp.Timestamp {
	if m != nil {
		return m.StartAt
	}
	return nil
}

func (m *UpdateRequest) GetEndAt() *timestamp.Timestamp {
	if m != nil {
		return m.EndAt
	}
	return nil
}

type TransferOwnerRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NewOwnerUserId       uint64   `protobuf:"varint,2,opt,name=new_owner_user_id,json=newOwnerUserId,proto3" json:"new_owner_user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferOwnerRequest) Reset()         { *m = TransferOwnerRequest{} }
func (m *TransferOwnerRequest) String() string { return proto.CompactTextString(m) }
func (*TransferOwnerRequest) ProtoMessage()    {}
func (*TransferOwnerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_31e9caa41a030c64, []int{3}
}

func (m *TransferOwnerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferOwnerRequest.Unmarshal(m, b)
}
func (m *TransferOwnerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferOwnerRequest.Marshal(b, m, deterministic)
}
func (m *TransferOwnerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferOwnerRequest.Merge(m, src)
}
func (m *TransferOwnerRequest) XXX_Size() int {
	return xxx_messageInfo_TransferOwnerRequest.Size(m)
}
func (m *TransferOwnerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferOwnerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransferOwnerRequest proto.InternalMessageInfo

func (m *TransferOwnerRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TransferOwnerRequest) GetNewOwnerUserId() uint64 {
	if m != nil {
		return m.NewOwnerUserId
	}
	return 0
}

type GetByIdRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByIdRequest) Reset()         { *m = GetByIdRequest{} }
func (m *GetByIdRequest) String() string { return proto.CompactTextString(m) }
func (*GetByIdRequest) ProtoMessage()    {}
func (*GetByIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_31e9caa41a030c64, []int{4}
}

func (m *GetByIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByIdRequest.Unmarshal(m, b)
}
func (m *GetByIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByIdRequest.Marshal(b, m, deterministic)
}
func (m *GetByIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByIdRequest.Merge(m, src)
}
func (m *GetByIdRequest) XXX_Size() int {
	return xxx_messageInfo_GetByIdRequest.Size(m)
}
func (m *GetByIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetByIdRequest proto.InternalMessageInfo

func (m *GetByIdRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ListRequest struct {
	OwnerUserId          uint64               `protobuf:"varint,1,opt,name=owner_user_id,json=ownerUserId,proto3" json:"owner_user_id,omitempty"`
	StartAfter           *timestamp.Timestamp `protobuf:"bytes,2,opt,name=start_after,json=startAfter,proto3" json:"start_after,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_31e9caa41a030c64, []int{5}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetOwnerUserId() uint64 {
	if m != nil {
		return m.OwnerUserId
	}
	return 0
}

func (m *ListRequest) GetStartAfter() *timestamp.Timestamp {
	if m != nil {
		return m.StartAfter
	}
	return nil
}

type ListResponse struct {
	Events               []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_31e9caa41a030c64, []int{6}
}

func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func init() {
	proto.RegisterType((*Event)(nil), "microservices.event.Event")
	proto.RegisterType((*CreateRequest)(nil), "microservices.event.CreateRequest")
	proto.RegisterType((*UpdateRequest)(nil), "microservices.event.UpdateRequest")
	proto.RegisterType((*TransferOwnerRequest)(nil), "microservices.event.TransferOwnerRequest")
	proto.RegisterType((*GetByIdRequest)(nil), "microservices.event.GetByIdRequest")
	proto.RegisterType((*ListRequest)(nil), "microservices.event.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "microservices.event.ListResponse")
}

func init() { proto.RegisterFile("microservices/event/event.proto", fileDescriptor_31e9caa41a030c64) }

var fileDescriptor_31e9caa41a030c64 = []byte{
	// 535 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xc1, 0x6e, 0xd3, 0x40,
	0x14, 0x94, 0x1d, 0x27, 0x69, 0x5f, 0x9a, 0x48, 0x2c, 0x3d, 0x58, 0xb9, 0xd4, 0x98, 0x4b, 0x7a,
	0xc0, 0x16, 0x41, 0x1c, 0x50, 0xc5, 0x21, 0x41, 0x08, 0x0a, 0x48, 0x15, 0xa1, 0xe5, 0xc0, 0x25,
	0x72, 0xec, 0x17, 0x63, 0x11, 0xaf, 0xdd, 0xdd, 0x75, 0x22, 0xbe, 0x83, 0x4f, 0xe0, 0x13, 0xf8,
	0x06, 0xfe, 0x0b, 0x79, 0xd7, 0xa6, 0xb1, 0xea, 0x38, 0x55, 0x2e, 0x56, 0xbc, 0x3b, 0x33, 0x3b,
	0x9e, 0x37, 0x1b, 0x38, 0x8b, 0x23, 0x9f, 0x25, 0x1c, 0xd9, 0x3a, 0xf2, 0x91, 0xbb, 0xb8, 0x46,
	0x2a, 0xd4, 0xd3, 0x49, 0x59, 0x22, 0x12, 0xf2, 0xb8, 0x02, 0x70, 0xe4, 0xd6, 0xf0, 0x2c, 0x4c,
	0x92, 0x70, 0x85, 0xae, 0x84, 0x2c, 0xb2, 0xa5, 0x2b, 0xa2, 0x18, 0xb9, 0xf0, 0xe2, 0x54, 0xb1,
	0xec, 0xbf, 0x3a, 0xb4, 0xdf, 0xe6, 0x50, 0x32, 0x00, 0x3d, 0x0a, 0x4c, 0xcd, 0xd2, 0x46, 0xc6,
	0x4c, 0x8f, 0x02, 0x42, 0xc0, 0xa0, 0x5e, 0x8c, 0xa6, 0x6e, 0x69, 0xa3, 0xe3, 0x99, 0xfc, 0x4d,
	0x4e, 0xa1, 0x9d, 0xae, 0x3c, 0x1f, 0xcd, 0x96, 0x5c, 0x54, 0x2f, 0xc4, 0x86, 0x7e, 0xb2, 0xa1,
	0xc8, 0xe6, 0x19, 0x47, 0x36, 0x8f, 0x02, 0xd3, 0x90, 0x22, 0x3d, 0xb9, 0x78, 0xc3, 0x91, 0x5d,
	0x06, 0xe4, 0x25, 0x1c, 0x71, 0xe1, 0x31, 0x31, 0xf7, 0x84, 0xd9, 0xb6, 0xb4, 0x51, 0x6f, 0x3c,
	0x74, 0x94, 0x37, 0xa7, 0xf4, 0xe6, 0x5c, 0x97, 0xde, 0x66, 0x5d, 0x89, 0x9d, 0x08, 0xf2, 0x1c,
	0x3a, 0x48, 0x83, 0x9c, 0xd4, 0xd9, 0x4b, 0x6a, 0x23, 0x0d, 0x26, 0x82, 0xbc, 0x02, 0xc8, 0xd2,
	0xc0, 0x13, 0x28, 0x69, 0xdd, 0xbd, 0xb4, 0xe3, 0x02, 0xad, 0xa8, 0x3e, 0xc3, 0x92, 0x7a, 0xb4,
	0x9f, 0x5a, 0xa0, 0x27, 0xc2, 0xfe, 0xad, 0x41, 0xff, 0x8d, 0x7c, 0x9b, 0xe1, 0x6d, 0x86, 0x5c,
	0xfc, 0xcf, 0x4f, 0xab, 0xcb, 0x4f, 0xdf, 0xce, 0x6f, 0x3b, 0x9b, 0xd6, 0x21, 0xd9, 0x18, 0x0f,
	0xcc, 0xc6, 0xfe, 0xa3, 0x41, 0xff, 0x46, 0x7e, 0x6e, 0xe9, 0xf2, 0xf0, 0xa9, 0x6f, 0xbb, 0x36,
	0x0e, 0x71, 0xdd, 0x7e, 0xa8, 0xeb, 0xcf, 0x70, 0x7a, 0xcd, 0x3c, 0xca, 0x97, 0xc8, 0xae, 0xf2,
	0x4a, 0xed, 0xf2, 0x7e, 0x0e, 0x8f, 0x28, 0x6e, 0xe6, 0xd5, 0x2e, 0xea, 0x72, 0x7b, 0x40, 0x71,
	0x73, 0x75, 0x57, 0x47, 0xdb, 0x82, 0xc1, 0x3b, 0x14, 0xd3, 0x9f, 0x97, 0xc1, 0x0e, 0x31, 0x9b,
	0x42, 0xef, 0x53, 0xc4, 0x45, 0xb9, 0x7d, 0xaf, 0xe3, 0xda, 0xfd, 0x8e, 0x5f, 0x40, 0xaf, 0x48,
	0x64, 0x29, 0x90, 0xc9, 0x93, 0x9b, 0xbf, 0x0f, 0x54, 0x28, 0x39, 0xda, 0x9e, 0xc2, 0x89, 0x3a,
	0x8f, 0xa7, 0x09, 0xe5, 0x48, 0xc6, 0xd0, 0x91, 0x57, 0x98, 0x9b, 0x9a, 0xd5, 0x92, 0x3a, 0x35,
	0xf7, 0xdb, 0x91, 0x57, 0x77, 0x56, 0x20, 0xc7, 0xbf, 0x5a, 0x70, 0x22, 0x57, 0xbe, 0x28, 0x14,
	0x79, 0x0f, 0x1d, 0x55, 0x4a, 0x62, 0xd7, 0xd2, 0x2b, 0x8d, 0x1d, 0x36, 0x1c, 0x91, 0x2b, 0xa9,
	0xe2, 0xec, 0x50, 0xaa, 0xb4, 0xaa, 0x51, 0xe9, 0x2b, 0xf4, 0x2b, 0xd3, 0x24, 0xe7, 0xb5, 0xe0,
	0xba, 0x89, 0x37, 0xea, 0x7e, 0x80, 0x6e, 0x31, 0x52, 0xf2, 0xb4, 0x16, 0x56, 0x1d, 0x78, 0xa3,
	0xd6, 0x47, 0x30, 0xf2, 0x61, 0x10, 0xab, 0x16, 0xb3, 0xd5, 0x8b, 0xe1, 0x93, 0x06, 0x84, 0x9a,
	0xe4, 0xf4, 0xf5, 0xb7, 0x8b, 0x30, 0x12, 0xdf, 0xb3, 0x85, 0xe3, 0x27, 0xb1, 0xbb, 0x5e, 0x7b,
	0x3f, 0xbc, 0x18, 0x5d, 0x11, 0xad, 0xdc, 0x90, 0xa5, 0xbe, 0x7c, 0x3c, 0x0b, 0x6f, 0x57, 0x21,
	0x52, 0xb7, 0xe6, 0x3f, 0x7e, 0xd1, 0x91, 0xc5, 0x79, 0xf1, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xf1,
	0x6d, 0x68, 0x7c, 0x01, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventServiceClient is the client API for EventService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventServiceClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*Event, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*Event, error)
	TransferOwner(ctx context.Context, in *TransferOwnerRequest, opts ...grpc.CallOption) (*Event, error)
	GetById(ctx context.Context, in *GetByIdRequest, opts ...grpc.CallOption) (*Event, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
}

type eventServiceClient struct {
	cc *grpc.ClientConn
}

func NewEventServiceClient(cc *grpc.ClientConn) EventServiceClient {
	return &eventServiceClient{cc}
}

func (c *eventServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*Event, error) {
	out := new(Event)
	err := c.cc.Invoke(ctx, "/microservices.event.EventService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*Event, error) {
	out := new(Event)
	err := c.cc.Invoke(ctx, "/microservices.event.EventService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) TransferOwner(ctx context.Context, in *TransferOwnerRequest, opts ...grpc.CallOption) (*Event, error) {
	out := new(Event)
	err := c.cc.Invoke(ctx, "/microservices.event.EventService/TransferOwner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) GetById(ctx context.Context, in *GetByIdRequest, opts ...grpc.CallOption) (*Event, error) {
	out := new(Event)
	err := c.cc.Invoke(ctx, "/microservices.event.EventService/GetById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/microservices.event.EventService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventServiceServer is the server API for EventService service.
type EventServiceServer interface {
	Create(context.Context, *CreateRequest) (*Event, error)
	Update(context.Context, *UpdateRequest) (*Event, error)
	TransferOwner(context.Context, *TransferOwnerRequest) (*Event, error)
	GetById(context.Context, *GetByIdRequest) (*Event, error)
	List(context.Context, *ListRequest) (*ListResponse, error)
}

// UnimplementedEventServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEventServiceServer struct {
}

func (*UnimplementedEventServiceServer) Create(ctx context.Context, req *CreateRequest) (*Event, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedEventServiceServer) Update(ctx context.Context, req *UpdateRequest) (*Event, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedEventServiceServer) TransferOwner(ctx context.Context, req *TransferOwnerRequest) (*Event, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferOwner not implemented")
}
func (*UnimplementedEventServiceServer) GetById(ctx context.Context, req *GetByIdRequest) (*Event, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetById not implemented")
}
func (*UnimplementedEventServiceServer) List(ctx context.Context, req *ListRequest) (*ListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterEventServiceServer(s *grpc.Server, srv EventServiceServer) {
	s.RegisterService(&_EventService_serviceDesc, srv)
}

func _EventService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/microservices.event.EventService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/microservices.event.EventService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_TransferOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferOwnerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).TransferOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/microservices.event.EventService/TransferOwner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).TransferOwner(ctx, req.(*TransferOwnerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_GetById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).GetById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/microservices.event.EventService/GetById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).GetById(ctx, req.(*GetByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/microservices.event.EventService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EventService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "microservices.event.EventService",
	HandlerType: (*EventServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _EventService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _EventService_Update_Handler,
		},
		{
			MethodName: "TransferOwner",
			Handler:    _EventService_TransferOwner_Handler,
		},
		{
			MethodName: "GetById",
			Handler:    _EventService_GetById_Handler,
		},
		{
			MethodName: "List",
			Handler:    _EventService_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "microservices/event/event.proto",
}
