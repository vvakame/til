// Code generated by protoc-gen-go. DO NOT EDIT.
// source: microservices/ticket/ticket.proto

package ticket

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	event "github.com/vvakame/til/grpc/grpc-gqlgen/microservices/event"
	user "github.com/vvakame/til/grpc/grpc-gqlgen/microservices/user"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BuyTicketStatus int32

const (
	BuyTicketStatus_UNKNOWN BuyTicketStatus = 0
	BuyTicketStatus_SUCCEED BuyTicketStatus = 1
	BuyTicketStatus_FAIL    BuyTicketStatus = 2
)

var BuyTicketStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "SUCCEED",
	2: "FAIL",
}

var BuyTicketStatus_value = map[string]int32{
	"UNKNOWN": 0,
	"SUCCEED": 1,
	"FAIL":    2,
}

func (x BuyTicketStatus) String() string {
	return proto.EnumName(BuyTicketStatus_name, int32(x))
}

func (BuyTicketStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_492b7c94e43a3ad0, []int{0}
}

type Ticket struct {
	Event                *event.Event         `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	User                 *user.User           `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Ticket) Reset()         { *m = Ticket{} }
func (m *Ticket) String() string { return proto.CompactTextString(m) }
func (*Ticket) ProtoMessage()    {}
func (*Ticket) Descriptor() ([]byte, []int) {
	return fileDescriptor_492b7c94e43a3ad0, []int{0}
}

func (m *Ticket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ticket.Unmarshal(m, b)
}
func (m *Ticket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ticket.Marshal(b, m, deterministic)
}
func (m *Ticket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ticket.Merge(m, src)
}
func (m *Ticket) XXX_Size() int {
	return xxx_messageInfo_Ticket.Size(m)
}
func (m *Ticket) XXX_DiscardUnknown() {
	xxx_messageInfo_Ticket.DiscardUnknown(m)
}

var xxx_messageInfo_Ticket proto.InternalMessageInfo

func (m *Ticket) GetEvent() *event.Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *Ticket) GetUser() *user.User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Ticket) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Ticket) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type SetTicketLimitRequest struct {
	EventId              uint64   `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Limit                uint32   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetTicketLimitRequest) Reset()         { *m = SetTicketLimitRequest{} }
func (m *SetTicketLimitRequest) String() string { return proto.CompactTextString(m) }
func (*SetTicketLimitRequest) ProtoMessage()    {}
func (*SetTicketLimitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_492b7c94e43a3ad0, []int{1}
}

func (m *SetTicketLimitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetTicketLimitRequest.Unmarshal(m, b)
}
func (m *SetTicketLimitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetTicketLimitRequest.Marshal(b, m, deterministic)
}
func (m *SetTicketLimitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetTicketLimitRequest.Merge(m, src)
}
func (m *SetTicketLimitRequest) XXX_Size() int {
	return xxx_messageInfo_SetTicketLimitRequest.Size(m)
}
func (m *SetTicketLimitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetTicketLimitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetTicketLimitRequest proto.InternalMessageInfo

func (m *SetTicketLimitRequest) GetEventId() uint64 {
	if m != nil {
		return m.EventId
	}
	return 0
}

func (m *SetTicketLimitRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type SetTicketLimitResponse struct {
	Event                *event.Event `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Limit                uint64       `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SetTicketLimitResponse) Reset()         { *m = SetTicketLimitResponse{} }
func (m *SetTicketLimitResponse) String() string { return proto.CompactTextString(m) }
func (*SetTicketLimitResponse) ProtoMessage()    {}
func (*SetTicketLimitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_492b7c94e43a3ad0, []int{2}
}

func (m *SetTicketLimitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetTicketLimitResponse.Unmarshal(m, b)
}
func (m *SetTicketLimitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetTicketLimitResponse.Marshal(b, m, deterministic)
}
func (m *SetTicketLimitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetTicketLimitResponse.Merge(m, src)
}
func (m *SetTicketLimitResponse) XXX_Size() int {
	return xxx_messageInfo_SetTicketLimitResponse.Size(m)
}
func (m *SetTicketLimitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetTicketLimitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetTicketLimitResponse proto.InternalMessageInfo

func (m *SetTicketLimitResponse) GetEvent() *event.Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *SetTicketLimitResponse) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type BuyTicketRequest struct {
	EventId              uint64   `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuyTicketRequest) Reset()         { *m = BuyTicketRequest{} }
func (m *BuyTicketRequest) String() string { return proto.CompactTextString(m) }
func (*BuyTicketRequest) ProtoMessage()    {}
func (*BuyTicketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_492b7c94e43a3ad0, []int{3}
}

func (m *BuyTicketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuyTicketRequest.Unmarshal(m, b)
}
func (m *BuyTicketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuyTicketRequest.Marshal(b, m, deterministic)
}
func (m *BuyTicketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuyTicketRequest.Merge(m, src)
}
func (m *BuyTicketRequest) XXX_Size() int {
	return xxx_messageInfo_BuyTicketRequest.Size(m)
}
func (m *BuyTicketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BuyTicketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BuyTicketRequest proto.InternalMessageInfo

func (m *BuyTicketRequest) GetEventId() uint64 {
	if m != nil {
		return m.EventId
	}
	return 0
}

type BuyTicketResponse struct {
	Result               BuyTicketStatus `protobuf:"varint,1,opt,name=result,proto3,enum=microservices.ticket.BuyTicketStatus" json:"result,omitempty"`
	Ticket               *Ticket         `protobuf:"bytes,2,opt,name=ticket,proto3" json:"ticket,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *BuyTicketResponse) Reset()         { *m = BuyTicketResponse{} }
func (m *BuyTicketResponse) String() string { return proto.CompactTextString(m) }
func (*BuyTicketResponse) ProtoMessage()    {}
func (*BuyTicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_492b7c94e43a3ad0, []int{4}
}

func (m *BuyTicketResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuyTicketResponse.Unmarshal(m, b)
}
func (m *BuyTicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuyTicketResponse.Marshal(b, m, deterministic)
}
func (m *BuyTicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuyTicketResponse.Merge(m, src)
}
func (m *BuyTicketResponse) XXX_Size() int {
	return xxx_messageInfo_BuyTicketResponse.Size(m)
}
func (m *BuyTicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BuyTicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BuyTicketResponse proto.InternalMessageInfo

func (m *BuyTicketResponse) GetResult() BuyTicketStatus {
	if m != nil {
		return m.Result
	}
	return BuyTicketStatus_UNKNOWN
}

func (m *BuyTicketResponse) GetTicket() *Ticket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

type ResignTicketRequest struct {
	TicketId             uint64   `protobuf:"varint,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResignTicketRequest) Reset()         { *m = ResignTicketRequest{} }
func (m *ResignTicketRequest) String() string { return proto.CompactTextString(m) }
func (*ResignTicketRequest) ProtoMessage()    {}
func (*ResignTicketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_492b7c94e43a3ad0, []int{5}
}

func (m *ResignTicketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResignTicketRequest.Unmarshal(m, b)
}
func (m *ResignTicketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResignTicketRequest.Marshal(b, m, deterministic)
}
func (m *ResignTicketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResignTicketRequest.Merge(m, src)
}
func (m *ResignTicketRequest) XXX_Size() int {
	return xxx_messageInfo_ResignTicketRequest.Size(m)
}
func (m *ResignTicketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResignTicketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResignTicketRequest proto.InternalMessageInfo

func (m *ResignTicketRequest) GetTicketId() uint64 {
	if m != nil {
		return m.TicketId
	}
	return 0
}

type ResignTicketResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResignTicketResponse) Reset()         { *m = ResignTicketResponse{} }
func (m *ResignTicketResponse) String() string { return proto.CompactTextString(m) }
func (*ResignTicketResponse) ProtoMessage()    {}
func (*ResignTicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_492b7c94e43a3ad0, []int{6}
}

func (m *ResignTicketResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResignTicketResponse.Unmarshal(m, b)
}
func (m *ResignTicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResignTicketResponse.Marshal(b, m, deterministic)
}
func (m *ResignTicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResignTicketResponse.Merge(m, src)
}
func (m *ResignTicketResponse) XXX_Size() int {
	return xxx_messageInfo_ResignTicketResponse.Size(m)
}
func (m *ResignTicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResignTicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResignTicketResponse proto.InternalMessageInfo

type TicketsRequest struct {
	EventId              uint64   `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	UserId               uint64   `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TicketsRequest) Reset()         { *m = TicketsRequest{} }
func (m *TicketsRequest) String() string { return proto.CompactTextString(m) }
func (*TicketsRequest) ProtoMessage()    {}
func (*TicketsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_492b7c94e43a3ad0, []int{7}
}

func (m *TicketsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TicketsRequest.Unmarshal(m, b)
}
func (m *TicketsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TicketsRequest.Marshal(b, m, deterministic)
}
func (m *TicketsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TicketsRequest.Merge(m, src)
}
func (m *TicketsRequest) XXX_Size() int {
	return xxx_messageInfo_TicketsRequest.Size(m)
}
func (m *TicketsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TicketsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TicketsRequest proto.InternalMessageInfo

func (m *TicketsRequest) GetEventId() uint64 {
	if m != nil {
		return m.EventId
	}
	return 0
}

func (m *TicketsRequest) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type TicketsResponse struct {
	EventList            []*event.Event `protobuf:"bytes,1,rep,name=event_list,json=eventList,proto3" json:"event_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TicketsResponse) Reset()         { *m = TicketsResponse{} }
func (m *TicketsResponse) String() string { return proto.CompactTextString(m) }
func (*TicketsResponse) ProtoMessage()    {}
func (*TicketsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_492b7c94e43a3ad0, []int{8}
}

func (m *TicketsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TicketsResponse.Unmarshal(m, b)
}
func (m *TicketsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TicketsResponse.Marshal(b, m, deterministic)
}
func (m *TicketsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TicketsResponse.Merge(m, src)
}
func (m *TicketsResponse) XXX_Size() int {
	return xxx_messageInfo_TicketsResponse.Size(m)
}
func (m *TicketsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TicketsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TicketsResponse proto.InternalMessageInfo

func (m *TicketsResponse) GetEventList() []*event.Event {
	if m != nil {
		return m.EventList
	}
	return nil
}

func init() {
	proto.RegisterEnum("microservices.ticket.BuyTicketStatus", BuyTicketStatus_name, BuyTicketStatus_value)
	proto.RegisterType((*Ticket)(nil), "microservices.ticket.Ticket")
	proto.RegisterType((*SetTicketLimitRequest)(nil), "microservices.ticket.SetTicketLimitRequest")
	proto.RegisterType((*SetTicketLimitResponse)(nil), "microservices.ticket.SetTicketLimitResponse")
	proto.RegisterType((*BuyTicketRequest)(nil), "microservices.ticket.BuyTicketRequest")
	proto.RegisterType((*BuyTicketResponse)(nil), "microservices.ticket.BuyTicketResponse")
	proto.RegisterType((*ResignTicketRequest)(nil), "microservices.ticket.ResignTicketRequest")
	proto.RegisterType((*ResignTicketResponse)(nil), "microservices.ticket.ResignTicketResponse")
	proto.RegisterType((*TicketsRequest)(nil), "microservices.ticket.TicketsRequest")
	proto.RegisterType((*TicketsResponse)(nil), "microservices.ticket.TicketsResponse")
}

func init() { proto.RegisterFile("microservices/ticket/ticket.proto", fileDescriptor_492b7c94e43a3ad0) }

var fileDescriptor_492b7c94e43a3ad0 = []byte{
	// 576 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xff, 0x6e, 0xd3, 0x30,
	0x10, 0xa6, 0x5b, 0x96, 0xb6, 0x37, 0xd6, 0x15, 0x53, 0x46, 0x09, 0xa0, 0x41, 0xc4, 0xf8, 0x31,
	0xb6, 0x04, 0x15, 0xf8, 0x63, 0x12, 0x20, 0x75, 0x5b, 0x11, 0x15, 0x55, 0x91, 0xd2, 0x15, 0x24,
	0x84, 0x34, 0xd2, 0xc4, 0x04, 0xab, 0x49, 0x93, 0xc5, 0x4e, 0x25, 0xde, 0x80, 0x57, 0xe0, 0xe5,
	0x78, 0x16, 0x14, 0xdb, 0x29, 0x4b, 0x15, 0x91, 0x8a, 0x7f, 0x1c, 0x5d, 0xfc, 0x7d, 0xf7, 0xdd,
	0x77, 0x77, 0x32, 0xdc, 0x0f, 0x88, 0x13, 0x87, 0x14, 0xc7, 0x73, 0xe2, 0x60, 0x6a, 0x32, 0xe2,
	0x4c, 0x31, 0x93, 0x1f, 0x23, 0x8a, 0x43, 0x16, 0xa2, 0x56, 0x0e, 0x62, 0x88, 0x3b, 0x6d, 0xd7,
	0x0b, 0x43, 0xcf, 0xc7, 0x26, 0xc7, 0x4c, 0x92, 0x6f, 0x26, 0x23, 0x01, 0xa6, 0xcc, 0x0e, 0x22,
	0x41, 0xd3, 0x76, 0xf3, 0x99, 0xf1, 0x1c, 0xcf, 0x98, 0x38, 0x25, 0xe0, 0x6e, 0x1e, 0x90, 0x50,
	0x1c, 0xf3, 0x43, 0x5c, 0xeb, 0xbf, 0x2b, 0xa0, 0x9e, 0x71, 0x2d, 0xf4, 0x0c, 0x36, 0x38, 0xb1,
	0x5d, 0xb9, 0x57, 0x79, 0xbc, 0xd9, 0xd1, 0x8c, 0x7c, 0x45, 0x22, 0x69, 0x2f, 0x3d, 0x2d, 0x01,
	0x44, 0x07, 0xa0, 0xa4, 0xa9, 0xda, 0x6b, 0x9c, 0xd0, 0x5e, 0x22, 0x70, 0x95, 0x31, 0xc5, 0xb1,
	0xc5, 0x51, 0xe8, 0x08, 0x20, 0x89, 0x5c, 0x9b, 0x61, 0xf7, 0xdc, 0x66, 0xed, 0x75, 0x29, 0x22,
	0x0c, 0x1a, 0x99, 0x41, 0xe3, 0x2c, 0x33, 0x68, 0xd5, 0x25, 0xba, 0xcb, 0x52, 0xaa, 0x13, 0xe3,
	0x8c, 0xaa, 0x94, 0x53, 0x25, 0xba, 0xcb, 0xf4, 0x77, 0x70, 0x63, 0x84, 0x99, 0xb0, 0x38, 0x20,
	0x01, 0x61, 0x16, 0xbe, 0x48, 0x30, 0x65, 0xe8, 0x16, 0xd4, 0xb8, 0x8b, 0x73, 0xe2, 0x72, 0xc7,
	0x8a, 0x55, 0xe5, 0x71, 0xdf, 0x45, 0x2d, 0xd8, 0xf0, 0x53, 0x28, 0x37, 0xb6, 0x65, 0x89, 0x40,
	0xff, 0x0a, 0x3b, 0xcb, 0x99, 0x68, 0x14, 0xce, 0x28, 0xfe, 0x8f, 0xce, 0xe5, 0x14, 0x94, 0x4c,
	0xe1, 0x10, 0x9a, 0xc7, 0xc9, 0x0f, 0xa1, 0x50, 0x5e, 0xa6, 0xfe, 0xb3, 0x02, 0xd7, 0x2e, 0xe1,
	0x65, 0x31, 0xaf, 0x41, 0x8d, 0x31, 0x4d, 0x7c, 0x51, 0x4d, 0xa3, 0xb3, 0x67, 0x14, 0x6d, 0x96,
	0xb1, 0x20, 0x8e, 0x98, 0xcd, 0x12, 0x6a, 0x49, 0x12, 0x7a, 0x01, 0xaa, 0x40, 0xc8, 0xa9, 0xde,
	0x29, 0xa6, 0x4b, 0x51, 0x89, 0xd5, 0x3b, 0x70, 0xdd, 0xc2, 0x94, 0x78, 0xb3, 0x7c, 0xf1, 0xb7,
	0xa1, 0x2e, 0x00, 0x7f, 0xab, 0xaf, 0x89, 0x1f, 0x7d, 0x57, 0xdf, 0x81, 0x56, 0x9e, 0x23, 0x0c,
	0xe8, 0xa7, 0xd0, 0x10, 0x7f, 0xe8, 0x0a, 0xa3, 0xba, 0x09, 0xd5, 0x74, 0xb9, 0xd2, 0x1b, 0xd1,
	0x4a, 0x35, 0x0d, 0xfb, 0xae, 0x3e, 0x80, 0xed, 0x45, 0x16, 0xd9, 0x99, 0x23, 0x00, 0x91, 0xc6,
	0x27, 0x34, 0xed, 0xce, 0x7a, 0xc9, 0xac, 0xea, 0x3c, 0x18, 0x10, 0xca, 0xf6, 0x5f, 0xc2, 0xf6,
	0x52, 0xc3, 0xd0, 0x26, 0x54, 0xc7, 0xc3, 0xf7, 0xc3, 0x0f, 0x9f, 0x86, 0xcd, 0x2b, 0x69, 0x30,
	0x1a, 0x9f, 0x9c, 0xf4, 0x7a, 0xa7, 0xcd, 0x0a, 0xaa, 0x81, 0xf2, 0xb6, 0xdb, 0x1f, 0x34, 0xd7,
	0x3a, 0xbf, 0xd6, 0x61, 0x4b, 0x92, 0x84, 0x00, 0x9a, 0x42, 0x23, 0xbf, 0x44, 0xe8, 0x69, 0x71,
	0x83, 0x0b, 0x97, 0x56, 0x3b, 0x58, 0x0d, 0x2c, 0x0d, 0x7f, 0x81, 0xfa, 0xa2, 0x6a, 0xf4, 0xb0,
	0x64, 0x0f, 0x32, 0x89, 0x47, 0xa5, 0x38, 0x99, 0x1d, 0xc3, 0xd5, 0xcb, 0xf3, 0x43, 0x4f, 0x8a,
	0x89, 0x05, 0x7b, 0xa1, 0xed, 0xaf, 0x02, 0x95, 0x32, 0x1f, 0xa1, 0x2a, 0x07, 0x89, 0x1e, 0xfc,
	0x6b, 0x17, 0xb3, 0x6d, 0xd1, 0xf6, 0x4a, 0x50, 0x22, 0xef, 0xf1, 0x9b, 0xcf, 0xaf, 0x3c, 0xc2,
	0xbe, 0x27, 0x13, 0xc3, 0x09, 0x03, 0x73, 0x3e, 0xb7, 0xa7, 0x76, 0x80, 0x4d, 0x46, 0x7c, 0xd3,
	0x8b, 0x23, 0x87, 0x1f, 0x87, 0xde, 0x85, 0xef, 0xe1, 0x99, 0x59, 0xf4, 0x7a, 0x4f, 0x54, 0xfe,
	0xee, 0x3c, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff, 0x15, 0xde, 0x8a, 0x0f, 0xdc, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TicketServiceClient is the client API for TicketService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TicketServiceClient interface {
	SetTicketLimit(ctx context.Context, in *SetTicketLimitRequest, opts ...grpc.CallOption) (*SetTicketLimitResponse, error)
	BuyTicket(ctx context.Context, in *BuyTicketRequest, opts ...grpc.CallOption) (*BuyTicketResponse, error)
	ResignTicket(ctx context.Context, in *ResignTicketRequest, opts ...grpc.CallOption) (*ResignTicketResponse, error)
	Tickets(ctx context.Context, in *TicketsRequest, opts ...grpc.CallOption) (*TicketsResponse, error)
}

type ticketServiceClient struct {
	cc *grpc.ClientConn
}

func NewTicketServiceClient(cc *grpc.ClientConn) TicketServiceClient {
	return &ticketServiceClient{cc}
}

func (c *ticketServiceClient) SetTicketLimit(ctx context.Context, in *SetTicketLimitRequest, opts ...grpc.CallOption) (*SetTicketLimitResponse, error) {
	out := new(SetTicketLimitResponse)
	err := c.cc.Invoke(ctx, "/microservices.ticket.TicketService/SetTicketLimit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketServiceClient) BuyTicket(ctx context.Context, in *BuyTicketRequest, opts ...grpc.CallOption) (*BuyTicketResponse, error) {
	out := new(BuyTicketResponse)
	err := c.cc.Invoke(ctx, "/microservices.ticket.TicketService/BuyTicket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketServiceClient) ResignTicket(ctx context.Context, in *ResignTicketRequest, opts ...grpc.CallOption) (*ResignTicketResponse, error) {
	out := new(ResignTicketResponse)
	err := c.cc.Invoke(ctx, "/microservices.ticket.TicketService/ResignTicket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketServiceClient) Tickets(ctx context.Context, in *TicketsRequest, opts ...grpc.CallOption) (*TicketsResponse, error) {
	out := new(TicketsResponse)
	err := c.cc.Invoke(ctx, "/microservices.ticket.TicketService/Tickets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TicketServiceServer is the server API for TicketService service.
type TicketServiceServer interface {
	SetTicketLimit(context.Context, *SetTicketLimitRequest) (*SetTicketLimitResponse, error)
	BuyTicket(context.Context, *BuyTicketRequest) (*BuyTicketResponse, error)
	ResignTicket(context.Context, *ResignTicketRequest) (*ResignTicketResponse, error)
	Tickets(context.Context, *TicketsRequest) (*TicketsResponse, error)
}

// UnimplementedTicketServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTicketServiceServer struct {
}

func (*UnimplementedTicketServiceServer) SetTicketLimit(ctx context.Context, req *SetTicketLimitRequest) (*SetTicketLimitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTicketLimit not implemented")
}
func (*UnimplementedTicketServiceServer) BuyTicket(ctx context.Context, req *BuyTicketRequest) (*BuyTicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuyTicket not implemented")
}
func (*UnimplementedTicketServiceServer) ResignTicket(ctx context.Context, req *ResignTicketRequest) (*ResignTicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResignTicket not implemented")
}
func (*UnimplementedTicketServiceServer) Tickets(ctx context.Context, req *TicketsRequest) (*TicketsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Tickets not implemented")
}

func RegisterTicketServiceServer(s *grpc.Server, srv TicketServiceServer) {
	s.RegisterService(&_TicketService_serviceDesc, srv)
}

func _TicketService_SetTicketLimit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTicketLimitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketServiceServer).SetTicketLimit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/microservices.ticket.TicketService/SetTicketLimit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketServiceServer).SetTicketLimit(ctx, req.(*SetTicketLimitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketService_BuyTicket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuyTicketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketServiceServer).BuyTicket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/microservices.ticket.TicketService/BuyTicket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketServiceServer).BuyTicket(ctx, req.(*BuyTicketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketService_ResignTicket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResignTicketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketServiceServer).ResignTicket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/microservices.ticket.TicketService/ResignTicket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketServiceServer).ResignTicket(ctx, req.(*ResignTicketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketService_Tickets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TicketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketServiceServer).Tickets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/microservices.ticket.TicketService/Tickets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketServiceServer).Tickets(ctx, req.(*TicketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TicketService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "microservices.ticket.TicketService",
	HandlerType: (*TicketServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetTicketLimit",
			Handler:    _TicketService_SetTicketLimit_Handler,
		},
		{
			MethodName: "BuyTicket",
			Handler:    _TicketService_BuyTicket_Handler,
		},
		{
			MethodName: "ResignTicket",
			Handler:    _TicketService_ResignTicket_Handler,
		},
		{
			MethodName: "Tickets",
			Handler:    _TicketService_Tickets_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "microservices/ticket/ticket.proto",
}
